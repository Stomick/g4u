<?php
/**
 * Created by PhpStorm.
 * User: Stomick
 * Date: 18.07.2018
 * Time: 15:25
 */

namespace app\controllers\admin;

use app\components\CompAuthG4U;
use app\models\admin\AdminFrinchise;
use app\models\admin\Franchise;
use app\models\Leagues;
use app\models\User;
use app\components\HttpBearerAuthG4U;
use app\components\AccessType;
use yii\filters\ContentNegotiator;

use yii\rest\Controller;
use yii\web\Response;

class FranchiseController extends Controller
{
    private $answer;
    private $error = false;
    private $body;
    private $message;
    private $user;

    /**
     * {@inheritdoc}
     */

    public function behaviors()
    {
        $behaviors = parent::behaviors();
        $behaviors['authenticator'] = [
            'class' => CompAuthG4U::className(),
            'authMethods' => [
                HttpBearerAuthG4U::className()
            ],
        ];

        $behaviors['contentNegotiator'] = [
            'class' => ContentNegotiator::className(),
            'formats' => [
                'application/json' => Response::FORMAT_JSON,
            ],
        ];

        return $behaviors;
    }
    /**
     * {@inheritdoc}
     */
    public function actions()
    {
        return [
            'error' => [
                'class' => 'yii\web\ErrorAction',
            ],
        ];
    }


    public function beforeAction($action)
    {
        if (\Yii::$app->request->isPost) {
            if (!$this->body = \Yii::$app->request->getBodyParams()) {
                $this->error = true;
                $this->message = 'empty body';
            }
        }

        if($accept = \Yii::$app->request->getHeaders()->get('Authorization')) {
            if(is_array(explode(' ', $accept))) {
                if($this->user = User::findIdentityByAccessToken(explode(' ', $accept)[1])){
                    if($this->user->access_level != AccessType::GLOBAL_ADMIN)
                    {
                        $this->error = true;
                        $this->message = 'You not heave permission';
                    }
                }

            }
        }

        return parent::beforeAction($action); // TODO: Change the autogenerated stub

    }

    public function actionEmpty(){
        return ['answer' => $this->answer,'error' => $this->error,'message' => $this->message];
    }

    public function afterAction($action, $result)
    {
        return ['answer' => $this->answer,'error' => $this->error,'message' => $this->message];
    }

    public function actionIndex($name = null)
    {
        if($name==null) {
            $this->answer = Leagues::find()->select(['liga_id as id', 'title', 'status'])->asArray()->all();
        }else{
            $this->answer = Leagues::find()->select(['liga_id as id' , 'title' , 'status'])->andWhere('title like "%'.$name.'%"')->asArray()->all();
        }

    }

    public function actionAdd(){
        $liga = new Franchise();
        if(isset($this->body['name']) || !Franchise::find()->where(['name' => $this->body['name']])->one()){
            $liga->name = $this->body['name'];
            if(!User::find()->andWhere('email="'. $this->body['email'] .'" or nickname ="'. $this->body['login'].'"')->one()) {
                $user = new User();
                $user->nickname = $this->body['login'];
                $user->email = $this->body['email'];
                $user->locale = 'ru';
                $user->type = 'superadmin';
                $user->access_level = AccessType::SUPER_ADMIN;
                $user->setPassword($this->body['password']);
                $user->generateAuthKey();
                if ($user->save()) {
                    if ($liga->save()) {
                        $admin = new AdminFrinchise();
                        $admin->franchise_id = $liga->franchise_id;
                        $admin->user_id = $user->id;
                        if ($admin->save()) {
                            $this->answer = 'Maked !';
                        } else {
                            $this->error = true;
                            $this->message = $admin->errors;
                        }
                    } else {
                        $this->error = true;
                        $this->message = $liga->errors;
                    }

                } else {
                    $this->error = true;
                    $this->message = $user->errors;
                }
            }
            else {
                    $this->error = true;
                    $this->message = 'email or nickname isset';
            }
        }
        else {
            $this->error = true;
            $this->message = 'empty franchise name';
        }
    }

}
